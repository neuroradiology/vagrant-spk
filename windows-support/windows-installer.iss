; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "vagrant-spk"
#define MyAppVersion "v1.0"
#define MyAppPublisher "Sandstorm Development Group, Inc."
#define MyAppURL "https://docs.sandstorm.io/"
#define MyAppExeName "vagrant-spk.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{1EAFBDE2-157F-46F4-B5AB-6858FD3A0D8A}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
OutputDir=dist\innosetup
OutputBaseFilename=vagrant-spk-setup
Compression=lzma
SolidCompression=yes
ChangesEnvironment=true

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: modifypath; Description: &Add application directory to your environmental path

[Files]
; vagrant-spk itself
Source: "dist\vagrant-spk.exe"; DestDir: "{app}"; Flags: ignoreversion

; vagrant-spk platform stacks
Source: "..\stacks\*"; DestDir: "{app}\stacks"; Flags: recursesubdirs

; "helpers" - right now just the enter_grain binary and its sha1
Source: "..\helpers\*"; DestDir: "{app}\helpers"; Flags: recursesubdirs

; ssh binary + required DLLs, so that `vagrant ssh` can work
Source: "vendor\msysgit\ssh.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "vendor\msysgit\msys-crypto-1.0.0.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "vendor\msysgit\msys-minires.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "vendor\msysgit\msys-1.0.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "vendor\msysgit\msys-z.dll"; DestDir: "{app}"; Flags: ignoreversion

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Code]
const
	ModPathName = 'modifypath';
	ModPathType = 'user';

function ModPathDir(): TArrayOfString;
begin
	setArrayLength(Result, 2)
	Result[0] := ExpandConstant('{app}');
end;
#include "modpath.iss"
